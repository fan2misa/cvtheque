# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'
    intervention:
        driver: gd
    user:
        default: 'https://dummyimage.com/100x120/ecf0f1/7f8c8d'
        avatar_path: 'media/user'
    cv:
        avatar_path: 'media/cv'
    theme:
        default: 'https://dummyimage.com/298x421/ecf0f1/7f8c8d'
        avatar_path: 'media/themes'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    app.admin.user:
        class: App\Admin\UserAdmin
        arguments: [~, App\Entity\User, ~]
        tags:
        - { name: sonata.admin, manager_type: orm, group: "app.admin.group.user", label: "Liste des utilisateurs" }
        public: true

    app.admin.cv:
        class: App\Admin\CvAdmin
        arguments: [~, App\Entity\Cv, ~]
        tags:
        - { name: sonata.admin, manager_type: orm, group: "app.admin.group.cv", label: "Liste des CV" }
        public: true

    App\Service\ImageManager:
        arguments: ['%intervention%']

    App\Provider\UserProvider:
        arguments: ['@doctrine']

    App\Command\InitCommand:
      public: true
      arguments: ['@doctrine', '%kernel.project_dir%']

    App\Maker\ThemeMaker:
        arguments: ['@doctrine', '%kernel.project_dir%']

    App\EventListener\ThemeListener:
        arguments: ['@assets.packages', '@App\Service\ImageManager', '%kernel.project_dir%/public', '%theme%']
        tags:
            - { name: doctrine.orm.entity_listener }

    App\Service\UserService:
        public: true
        arguments: ['@doctrine', '@security.password_encoder', '@mailer', '@twig', '@assets.packages', '@App\Service\ImageManager', '%kernel.project_dir%', '%user%']

    App\Service\ContactService:
        public: true
        arguments: []

    App\Service\CVService:
        public: true
        arguments: ['@doctrine', '@assets.packages', '@App\Service\ImageManager', '%kernel.project_dir%', '%cv%']

    App\Service\Wrapper\CvWrapperService:
        public: true
        arguments: ['@App\Service\CVService', '@App\Service\Wrapper\UserWrapperService', '@App\Service\Wrapper\ThemeWrapperService']

    App\Service\Wrapper\UserWrapperService:
        public: true

    App\Service\Wrapper\ThemeWrapperService:
        public: true

    App\Service\PartageResponseService:
        public: true
        arguments: ['@App\Service\Wrapper\CvWrapperService']

    App\PartageResponse\HtmlPartageResponse:
        public: true
        arguments: ['@twig', '%kernel.project_dir%']
        tags:
            - { name: app.partage_response, extension: 'html' }

    App\PartageResponse\PdfPartageResponse:
        public: true
        arguments: ['@twig', '%kernel.project_dir%']
        tags:
            - { name: app.partage_response, extension: 'pdf' }

    App\ImageFilter\CvAvatarImageFilter:
        tags:
        - { name: app.intervention.image_filter }

    App\ImageFilter\UserAvatarImageFilter:
        tags:
        - { name: app.intervention.image_filter }
